name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to tag"
        required: true

jobs:
  tag:
    uses: singnet/das/.github/workflows/run-semver.yml@master
    with:
      version: ${{ github.event.inputs.version }}
      version-strategy: bump-version-from-variable-value
      job-image-namespace: trueagi
      job-image-version-semver: semantic-versioning
      main-branch: master
      version-tag-regex-pattern: /^\d+\.\d+\.\d+$/
      version-require-confirmation: "true"
      title: New version of hyperon-das-atomdb
      deliverable: Library in PyPI named hyperon-das-atomdb
    secrets: inherit

  publish:
    needs: tag
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ~3.10

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and Publishing library version in PyPI
        run: |
          poetry version ${{ github.event.inputs.version }}
          poetry build
          poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}

  publish-cpp:
    needs: tag
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ~3.10

      - name: Install requirements
        run: |-
          pip install twine

      - name: Update version
        working-directory: hyperon_das_atomdb_cpp
        run: sed -i 's/version = ".*"/version = "${{ github.event.inputs.version }}"/' pyproject.toml

      - name: Build Wheels
        working-directory: hyperon_das_atomdb_cpp
        run: make wheels

      - name: Publish Packages
        working-directory: hyperon_das_atomdb_cpp/dist
        run: twine upload *.whl --username __token__ --password ${{ secrets.PYPI_API_TOKEN }} --non-interactive
